---
import Countdown from "@/components/Countdown.vue"
import Layout from "@/layouts/Layout.astro"
import { currentEvent } from "@/util/event.ts"
import DoorButton from "@/components/DoorButton.vue"
import { services, getClients } from "@/util/lan.ts"

const now = Date.now()
const hasEnded = currentEvent.endDateTime.getTime() < now
const hasStarted = !hasEnded && currentEvent.startDateTime.getTime() <= now

const clients = getClients()
const currentClient = clients.all.find(
  ({ ip }) => ip === (Astro.request.headers.get("x-real-ip") ?? Astro.clientAddress),
)
---

<Layout>
  <div class="container">
    {
      !hasStarted && !hasEnded && (
        <p>
          La RastaLAN d√©bute dans
          <br />
          <Countdown date={currentEvent.startDateTime} client:load />
        </p>
      )
    }
    {hasStarted && !process.env.LAN_MODE && <p>La RastaLAN a d√©but√©&nbsp;!</p>}
    {
      hasEnded && (
        <>
          <p>La RastaLAN est termin√©e.</p>
          <p>√Ä dans six mois pour la prochaine LAN&nbsp;!</p>
        </>
      )
    }

    {
      hasStarted && !!process.env.LAN_MODE && (
        <div class="local-info">
          <p>Bienvenue √† la RastaLAN&nbsp;!</p>
          {currentClient !== undefined && (
            <>
              <div class="item">
                <span>Nom d'h√¥te</span>
                <span>
                  <code>{currentClient.name}</code>
                </span>
              </div>
              <div class="item">
                <span>Adresse IP</span>
                <span>
                  <code>{currentClient.ip}</code>
                </span>
              </div>
              <div class="item">
                <span>Connexion</span>
                <span>
                  {currentClient.iface === "cable" ? <code>Ethernet</code> : <code>Wi-Fi ({currentClient.iface})</code>}
                </span>
              </div>
              <div class="spacer" />
            </>
          )}

          {services.map(service => (
            <div class="item">
              <span>{service.name}</span>
              <span>
                {service.web ? (
                  <a href={service.web} target={service.web.startsWith("https://") ? "_blank" : undefined}>
                    <code>{service.uri}</code>
                  </a>
                ) : (
                  <code>{service.uri}</code>
                )}
              </span>
            </div>
          ))}

          <a class="online" href="/joueurs">
            üñ•Ô∏è {clients.wired.length} joueurs connect√©s
          </a>
        </div>
      )
    }

    {hasStarted && <DoorButton client:load>Ouvrir la porte</DoorButton>}
    {
      !hasEnded && (
        <a class="button" href="/inscription">
          Je m'inscris
        </a>
      )
    }
    <a class="button" href="/participants">Liste des participants</a>
  </div>
</Layout>

<style>
  .container {
    margin: auto;

    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }

  .countdown {
    font-size: 3rem;
  }

  button,
  .button {
    max-width: 300px;
    margin: auto;
  }

  .local-info p {
    margin-top: 0;
  }

  .local-info .online {
    display: inline-block;
    text-decoration: none;
    font-size: 0.8em;
    margin-top: 1em;
  }

  .local-info .item {
    max-width: 360px;
    margin: auto;
    text-align: left;
    font-size: 0.8em;
    display: flex;
    justify-content: space-between;
    padding: 0.1em 0;
  }

  .local-info .spacer {
    padding: 0.5em 0;
  }

  @media (max-width: 400px) {
    .local-info .item {
      font-size: 0.75em;
    }
  }

  code {
    display: inline-block;
  }
</style>
